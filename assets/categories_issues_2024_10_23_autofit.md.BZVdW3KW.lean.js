import{_ as i,c as a,ao as n,o as l}from"./chunks/framework.CZtOA9_k.js";const t="/docs/img/2024/10/23/C47648AF-F232-4981-B1B6-F2A94FD77A1F.png",p="/docs/img/2024/10/23/8665E661-E1C4-4ecd-9077-A197CD629F53.png",e="/docs/img/2024/10/23/4BD74A8D-F691-422c-890E-07EA089E173B.png",A=JSON.parse('{"title":"autofit.js缩放问题","description":"解决autofit.js缩放问题","frontmatter":{"title":"autofit.js缩放问题","description":"解决autofit.js缩放问题","author":"PandaJS","date":"2024/10/23 19:25","categories":["随笔记录"],"tags":["JavaScript","autofit"]},"headers":[],"relativePath":"categories/issues/2024/10/23/autofit.md","filePath":"categories/issues/2024/10/23/autofit.md","lastUpdated":1729669722000}'),h={name:"categories/issues/2024/10/23/autofit.md"};function r(k,s,d,o,c,g){return l(),a("div",null,s[0]||(s[0]=[n('<h1 id="前端可视化大屏自适应终极解决方案-autofit-js-及-踩坑记录" tabindex="-1">前端可视化大屏自适应终极解决方案 autofit.js 及 踩坑记录 <a class="header-anchor" href="#前端可视化大屏自适应终极解决方案-autofit-js-及-踩坑记录" aria-label="Permalink to &quot;前端可视化大屏自适应终极解决方案 autofit.js 及 踩坑记录&quot;">​</a></h1><h2 id="解决组件库中下拉框和其他元素位置偏移的问题" tabindex="-1">解决组件库中下拉框和其他元素位置偏移的问题 <a class="header-anchor" href="#解决组件库中下拉框和其他元素位置偏移的问题" aria-label="Permalink to &quot;解决组件库中下拉框和其他元素位置偏移的问题&quot;">​</a></h2><ul><li>问题描述：在项目中使用 autofit 适配页面时，下拉框和其他元素的位置会出现偏移，导致页面布局混乱。</li></ul><p><img src="'+t+'" alt="image" lang="zh-CN" data-fancybox="gallery"></p><ul><li><p>期望页面同正常页面一样一致，下拉框的位置出现在输入框的下方 <img src="'+p+`" alt="image" lang="zh-CN" data-fancybox="gallery"></p><h3 id="_1-初步解决偏移问题" tabindex="-1">1.初步解决偏移问题 <a class="header-anchor" href="#_1-初步解决偏移问题" aria-label="Permalink to &quot;1.初步解决偏移问题&quot;">​</a></h3><p>1、autofit 在默认挂载节点为 body，即所有节点都进行缩放，导致下拉框位置偏移。</p><p>2、将 autofit.js 的挂载节点设置为页面的根元素，即 body，这样下拉框的位置就不会偏移了。</p><p>3、使用 vue3 + native UI 演示</p></li></ul><div class="language-JavaScript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> autofit </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;autofit.js&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">autofit.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">init</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">({</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">  // dh: 929,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  dh: </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">1080</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">// 设计稿的高度，默认值 1080 设置929 即是减去浏览器地址栏的高度</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  dw: </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">1920</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">// 设计稿的宽度，默认是 1920</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  el: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;#app&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">// 渲染的dom，默认是 &quot;body&quot;，必须使用id选择器 #app</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  resize: </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">// 是否监听resize事件，默认是 true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h3 id="_2、modal-dialog-组件的偏移问题" tabindex="-1">2、modal/dialog 组件的偏移问题 <a class="header-anchor" href="#_2、modal-dialog-组件的偏移问题" aria-label="Permalink to &quot;2、modal/dialog 组件的偏移问题&quot;">​</a></h3><p>1、发现在 modal 中组件依然会发生偏移的问题。 2、尝试将 modal 移入#app 元素中偏移依旧存在。（modal 默认存在 body 中） 3、阅读文档发现，还可以设置 ignore 来忽略缩放的元素。 4、找到下拉框弹出部分的类名 进行排除，问题解决</p><div class="language-JavaScript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> autofit </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;autofit.js&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">autofit.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">init</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  dh: </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">929</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  dw: </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">1920</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  el: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;body&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  resize: </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  ignore: [</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;.v-binder-follower-container&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h2 id="大屏适配-页面自适应" tabindex="-1">大屏适配/页面自适应 <a class="header-anchor" href="#大屏适配-页面自适应" aria-label="Permalink to &quot;大屏适配/页面自适应&quot;">​</a></h2><ol><li><p>一般使用 postcss + rem 方案来进行适配，切换不同分辨率的屏幕，页面的元素大小会自动调整，达到自适应的效果。</p></li><li><p>vw/vh 方案，通过设置元素的 width/height 为 100vw/100vh，然后设置根元素 font-size 为 1vw/vh，这样元素的大小会根据屏幕大小自适应。</p></li><li><p>新特性 scale 方案，通过设置元素的 transform: scale(0.5) 缩放 50%，然后设置根元素 font-size 为 16px，这样元素的大小会根据屏幕大小自适应。</p></li><li><p>autofit.js 方案，通过设置元素的 width/height 为 auto，然后设置根元素 font-size 为 16px，这样元素的大小会根据屏幕大小自适应。</p></li></ol><h2 id="autofit-js-介绍" tabindex="-1">autofit.js 介绍 <a class="header-anchor" href="#autofit-js-介绍" aria-label="Permalink to &quot;autofit.js 介绍&quot;">​</a></h2><ul><li><a href="https://www.npmjs.com/package/autofit.js/v/3.0.6" target="_blank" rel="noreferrer">autofit.js</a> 是一款轻量级的 JavaScript 库，可以自动调整元素的大小，使其适应不同分辨率的屏幕。</li><li>autofit.js 是一个可以让你的 PC 项目自适应屏幕的工具，其原理非常简单，即在 scale 等比缩放的基础上，向右或向下增加了宽度或高度，以达到充满全屏的效果，使用 autofit.js 不会挤压、拉伸元素，它只是单纯的设置了容器的宽高。</li></ul><h2 id="使用方法" tabindex="-1">使用方法 <a class="header-anchor" href="#使用方法" aria-label="Permalink to &quot;使用方法&quot;">​</a></h2><h3 id="_1-引入文件" tabindex="-1">1. 引入文件 <a class="header-anchor" href="#_1-引入文件" aria-label="Permalink to &quot;1. 引入文件&quot;">​</a></h3><div class="language-html vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">script</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6CB6FF;"> src</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;https://cdn.jsdelivr.net/npm/autofit.js@latest/dist/autofit.min.js&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="language-JavaScript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> autofit </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;autofit.js&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">autofit.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">init</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">({</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">  // dh: 929,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  dh: </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">1080</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">// 设计稿的高度，默认值 1080 设置929 即是减去浏览器地址栏的高度</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  dw: </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">1920</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">// 设计稿的宽度，默认是 1920</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  el: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;body&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">// 渲染的dom，默认是 &quot;body&quot;，必须使用id选择器 #app</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  resize: </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">// 是否监听resize事件，默认是 true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  transition: </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">// 过渡时间，默认是 0</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  delay: </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> , </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">// 延迟时间，默认是 0,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  ignore: [], </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">// 忽略缩放的元素（该元素将反向缩放）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h2 id="tip" tabindex="-1">tip <a class="header-anchor" href="#tip" aria-label="Permalink to &quot;tip&quot;">​</a></h2><p>1、找到下拉框类型的方法</p><p>按图示选中 模拟已聚焦的网页 即可查看 <img src="`+e+'" alt="image" lang="zh-CN" data-fancybox="gallery"></p>',20)]))}const b=i(h,[["render",r]]);export{A as __pageData,b as default};
